version: "3.7"

services:
  dl-loading-ui:
    privileged: true
    image: camdl/dl-loading-ui:latest
    build:
      context: .
      network: host
      dockerfile: Dockerfile
      args:
        LOADING_UI_HARDCODED_USERS_FILE: ${LOADING_UI_HARDCODED_USERS_FILE}
    env_file:
      - ${ENV_FILE}
    ports:
      - ${LOADING_UI_PORT_EXT}:${LOADING_UI_PORT_INT}
    cap_add:
      - SYS_ADMIN
    security_opt:
      - "apparmor:unconfined"
    devices:
      - /dev/fuse
    depends_on:
      - dl-loading-db
    entrypoint: ["bash", "-c",  "mount-s3 --version && mkdir -p /mnt/s3data/data && mount-s3 --allow-overwrite --allow-delete $AWS_S3_BUCKET /mnt/s3data/data && java -jar -debug /usr/local/dl-loading-ui.war --spring.config.additional-location=/etc/dl-loading-ui/"]

  dl-loading-db:
    build:
      context: docker/dl-loading-db
      dockerfile: Dockerfile
      args:
        LOADING_DB_USER_SETUP_SQL: ${LOADING_DB_USER_SETUP_SQL}
        POSTGRES_PASSWORD: ${LOADING_DB_PASSWORD}
    restart: always
    image: camdl/dl-loading-db:latest
    volumes:
      - dl-loading-db:/var/lib/postgresql/data
    command: -p ${LOADING_DB_PORT_INT}
    environment:
      POSTGRES_USER: ${LOADING_DB_USER}
      POSTGRES_DB: ${LOADING_DB_DATABASE}
      POSTGRES_PASSWORD: ${LOADING_DB_PASSWORD}

#  s3fs:
#    privileged: true
#    build:
#      context: docker/mountpoint-s3
#      dockerfile: Dockerfile
#    #image: efrecon/s3fs:1.92
#    image: mountpoint-s3
#    restart: always
#    env_file:
#      - ${ENV_FILE}
#      # A workaround for bucket names containing '.' until the related s3fs-fuse issue is resolved
#      # Keep in mind this is a secrutiy risk (default is https)
#      #- AWS_S3_URL=https://s3.amazonaws.com
#    cap_add:
#      - SYS_ADMIN
#    security_opt:
#      - "apparmor:unconfined"
#    devices:
#      - /dev/fuse
#    volumes:
##      - s3data:/opt/s3fs/bucket
#      - type: bind
#        source: /mnt/s3data
#        target: /opt/s3fs
#        bind:
#          propagation: rshared
#
#    entrypoint: ["bash", "-c", "-l", "mkdir -p /opt/s3fs/bucket && mount-s3 -f sandbox-cudl-data-source /opt/s3fs/bucket"]

volumes:
  dl-loading-db:
