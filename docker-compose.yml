version: "3.7"

services:
  dl-loading-ui:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ${ENV_FILE}
    ports:
      - ${LOADING_UI_PORT_EXT}:${LOADING_UI_PORT_INT}
    image: cudl/dl-loading-ui:latest
    depends_on:
      - s3fs
    volumes:
      - /mnt/s3data/data:/mnt/s3data/data:shared

  dl-loading-db:
    build:
      context: docker/dl-loading-db
      dockerfile: Dockerfile
      args:
        LOADING_DB_USER_SETUP_SQL: ${LOADING_DB_USER_SETUP_SQL}
        POSTGRES_PASSWORD: ${LOADING_DB_PASSWORD}
    restart: always
    image: cudl/dl-loading-db:latest
    volumes:
      - dl-loading-db:/var/lib/postgresql/data
    command: -p ${LOADING_DB_PORT_INT}
    environment:
      POSTGRES_USER: ${LOADING_DB_USER}
      POSTGRES_DB: ${LOADING_DB_DATABASE}
      POSTGRES_PASSWORD: ${LOADING_DB_PASSWORD}

  s3fs:
    privileged: true
    image: efrecon/s3fs:1.86
    restart: always
    env_file:
      - ${ENV_FILE}
      # A workaround for bucket names containing '.' until the related s3fs-fuse issue is resolved
      # Keep in mind this is a secrutiy risk (default is https)
      # - AWS_S3_URL=http://s3.amazonaws.com
    volumes:
      - /mnt/s3data/data:/opt/s3fs/bucket:shared

volumes:
  dl-loading-db:
