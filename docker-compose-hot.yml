version: "3.7"

# Note: mountpoint not currently used as updating files not currently supported. Using s3fs until then.
services:
  dl-loading-ui:
    #privileged: true
    build:
      context: .
      dockerfile: Dockerfile
      args:
        LOADING_UI_HARDCODED_USERS_FILE: ${LOADING_UI_HARDCODED_USERS_FILE}
    env_file:
      - ${ENV_FILE}
    ports:
      - ${LOADING_UI_PORT_EXT}:${LOADING_UI_PORT_INT}
    #cap_add:
    #  - SYS_ADMIN
    #security_opt:
    #  - "apparmor:unconfined"
    #devices:
    #  - /dev/fuse
    #entrypoint: ["bash", "-c", "-l", "mkdir -p /mnt/s3data && mount-s3 $AWS_S3_BUCKET /mnt/s3data && java -jar -debug /usr/local/dl-loading-ui.war --spring.config.additional-location=/etc/dl-loading-ui/"]
    image: camdl/dl-loading-ui:latest
    volumes:
      # Use exploded webapp files, instead of packaged WAR, to allow hot reloading of source JSPs etc.
      #- ./src/main/webapp/:/usr/local/tomcat/webapps/ROOT/
      #- ./target/ui-0.1.0-SNAPSHOT.war:/usr/local/tomcat/webapps/ROOT.war
      - ./target/ui-0.1.0-SNAPSHOT/:/usr/local/tomcat/webapps/
      # Classes will be reloaded only if your IDE auto re-compiles, or you run a maven build.
      - ./target/classes/:/usr/local/tomcat/webapps/ROOT/WEB-INF/classes/
      - ./target/ui-0.1.0-SNAPSHOT/WEB-INF/lib/:/usr/local/tomcat/webapps/ROOT/WEB-INF/lib/
      - /mnt/s3data/data:/mnt/s3data/data:shared

    depends_on:
      - dl-loading-db
      - s3fs

  s3fs:
    privileged: true
    image: efrecon/s3fs:1.86
    restart: always
    env_file:
      - ${ENV_FILE}
      # A workaround for bucket names containing '.' until the related s3fs-fuse issue is resolved
      # Keep in mind this is a secrutiy risk (default is https)
      # - AWS_S3_URL=http://s3.amazonaws.com
    volumes:
      - /mnt/s3data/data:/opt/s3fs/bucket:shared

  dl-loading-db:
    build:
      context: docker/dl-loading-db
      dockerfile: Dockerfile
      args:
        LOADING_DB_USER_SETUP_SQL: ${LOADING_DB_USER_SETUP_SQL}
        POSTGRES_PASSWORD: ${LOADING_DB_PASSWORD}
    restart: always
    image: camdl/dl-loading-db:latest
    volumes:
      - dl-loading-db:/var/lib/postgresql/data
    command: -p ${LOADING_DB_PORT_INT}
    environment:
      POSTGRES_USER: ${LOADING_DB_USER}
      POSTGRES_DB: ${LOADING_DB_DATABASE}
      POSTGRES_PASSWORD: ${LOADING_DB_PASSWORD}

volumes:
  dl-loading-db:
